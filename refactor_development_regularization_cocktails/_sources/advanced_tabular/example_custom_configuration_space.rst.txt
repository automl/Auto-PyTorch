
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "advanced_tabular/example_custom_configuration_space.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_advanced_tabular_example_custom_configuration_space.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_advanced_tabular_example_custom_configuration_space.py:


======================
Tabular Classification with Custom Configuration Space
======================

The following example shows how adjust the configuration space of
the search. Currently, there are two changes that can be made to the space:-
1. Adjust individual hyperparameters in the pipeline
2. Include or exclude components:
    a) include: Dictionary containing components to include. Key is the node
                name and Value is an Iterable of the names of the components
                to include. Only these components will be present in the
                search space.
    b) exclude: Dictionary containing components to exclude. Key is the node
                name and Value is an Iterable of the names of the components
                to exclude. All except these components will be present in
                the search space.

.. GENERATED FROM PYTHON SOURCE LINES 19-142




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Task has already stopped
    <smac.runhistory.runhistory.RunHistory object at 0x7f5be825beb0> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ResNetBackbone:activation, Value: 'relu'
      network_backbone:ResNetBackbone:blocks_per_group_0, Value: 2
      network_backbone:ResNetBackbone:blocks_per_group_1, Value: 2
      network_backbone:ResNetBackbone:blocks_per_group_2, Value: 2
      network_backbone:ResNetBackbone:blocks_per_group_3, Value: 2
      network_backbone:ResNetBackbone:blocks_per_group_4, Value: 2
      network_backbone:ResNetBackbone:blocks_per_group_5, Value: 2
      network_backbone:ResNetBackbone:multi_branch_choice, Value: 'shake-shake'
      network_backbone:ResNetBackbone:num_groups, Value: 5
      network_backbone:ResNetBackbone:num_units_0, Value: 200
      network_backbone:ResNetBackbone:num_units_1, Value: 200
      network_backbone:ResNetBackbone:num_units_2, Value: 200
      network_backbone:ResNetBackbone:num_units_3, Value: 200
      network_backbone:ResNetBackbone:num_units_4, Value: 200
      network_backbone:ResNetBackbone:num_units_5, Value: 200
      network_backbone:ResNetBackbone:shake_shake_update_func, Value: 'M3'
      network_backbone:ResNetBackbone:use_batch_norm, Value: False
      network_backbone:ResNetBackbone:use_dropout, Value: False
      network_backbone:ResNetBackbone:use_skip_connection, Value: True
      network_backbone:__choice__, Value: 'ResNetBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:use_weight_decay, Value: True
      optimizer:AdamOptimizer:weight_decay, Value: 0.0001
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:Lookahead:la_alpha, Value: 0.6
      trainer:StandardTrainer:Lookahead:la_steps, Value: 6
      trainer:StandardTrainer:se_lastk, Constant: 3
      trainer:StandardTrainer:use_lookahead_optimizer, Value: True
      trainer:StandardTrainer:use_snapshot_ensemble, Value: True
      trainer:StandardTrainer:use_stochastic_weight_averaging, Value: True
      trainer:StandardTrainer:weighted_loss, Constant: 1
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.0015649795532226562, budget=0), TrajEntry(train_perf=0.17543859649122806, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ResNetBackbone:activation, Value: 'relu'
      network_backbone:ResNetBackbone:blocks_per_group_0, Value: 2
      network_backbone:ResNetBackbone:blocks_per_group_1, Value: 2
      network_backbone:ResNetBackbone:blocks_per_group_2, Value: 2
      network_backbone:ResNetBackbone:blocks_per_group_3, Value: 2
      network_backbone:ResNetBackbone:blocks_per_group_4, Value: 2
      network_backbone:ResNetBackbone:blocks_per_group_5, Value: 2
      network_backbone:ResNetBackbone:multi_branch_choice, Value: 'shake-shake'
      network_backbone:ResNetBackbone:num_groups, Value: 5
      network_backbone:ResNetBackbone:num_units_0, Value: 200
      network_backbone:ResNetBackbone:num_units_1, Value: 200
      network_backbone:ResNetBackbone:num_units_2, Value: 200
      network_backbone:ResNetBackbone:num_units_3, Value: 200
      network_backbone:ResNetBackbone:num_units_4, Value: 200
      network_backbone:ResNetBackbone:num_units_5, Value: 200
      network_backbone:ResNetBackbone:shake_shake_update_func, Value: 'M3'
      network_backbone:ResNetBackbone:use_batch_norm, Value: False
      network_backbone:ResNetBackbone:use_dropout, Value: False
      network_backbone:ResNetBackbone:use_skip_connection, Value: True
      network_backbone:__choice__, Value: 'ResNetBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:use_weight_decay, Value: True
      optimizer:AdamOptimizer:weight_decay, Value: 0.0001
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:Lookahead:la_alpha, Value: 0.6
      trainer:StandardTrainer:Lookahead:la_steps, Value: 6
      trainer:StandardTrainer:se_lastk, Constant: 3
      trainer:StandardTrainer:use_lookahead_optimizer, Value: True
      trainer:StandardTrainer:use_snapshot_ensemble, Value: True
      trainer:StandardTrainer:use_stochastic_weight_averaging, Value: True
      trainer:StandardTrainer:weighted_loss, Constant: 1
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=11.665368556976318, wallclock_time=13.352454662322998, budget=5.555555555555555)]
    {'accuracy': 0.861271676300578}
    |    | Preprocessing                                                     | Estimator                                                    |   Weight |
    |---:|:------------------------------------------------------------------|:-------------------------------------------------------------|---------:|
    |  0 | None                                                              | CatBoostClassifier                                           |     0.18 |
    |  1 | None                                                              | KNNClassifier                                                |     0.14 |
    |  2 | SimpleImputer,OneHotEncoder,StandardScaler,KitchenSink            | no embedding,ResNetBackbone,NoHead,nn.Sequential             |     0.12 |
    |  3 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential |     0.12 |
    |  4 | None                                                              | SVC                                                          |     0.1  |
    |  5 | None                                                              | LGBMClassifier                                               |     0.08 |
    |  6 | None                                                              | RFClassifier                                                 |     0.08 |
    |  7 | SimpleImputer,OneHotEncoder,StandardScaler,KitchenSink            | no embedding,ResNetBackbone,NoHead,nn.Sequential             |     0.06 |
    |  8 | SimpleImputer,OneHotEncoder,NoScaler,TruncSVD                     | no embedding,ResNetBackbone,NoHead,nn.Sequential             |     0.04 |
    |  9 | None                                                              | ExtraTreesClassifier                                         |     0.04 |
    | 10 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential |     0.04 |
    Task has already stopped
    <smac.runhistory.runhistory.RunHistory object at 0x7f5bf822f100> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:use_weight_decay, Value: True
      optimizer:AdamOptimizer:weight_decay, Value: 0.0001
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:Lookahead:la_alpha, Value: 0.6
      trainer:StandardTrainer:Lookahead:la_steps, Value: 6
      trainer:StandardTrainer:se_lastk, Constant: 3
      trainer:StandardTrainer:use_lookahead_optimizer, Value: True
      trainer:StandardTrainer:use_snapshot_ensemble, Value: True
      trainer:StandardTrainer:use_stochastic_weight_averaging, Value: True
      trainer:StandardTrainer:weighted_loss, Constant: 1
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.001667022705078125, budget=0), TrajEntry(train_perf=0.18128654970760238, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:use_weight_decay, Value: True
      optimizer:AdamOptimizer:weight_decay, Value: 0.0001
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:Lookahead:la_alpha, Value: 0.6
      trainer:StandardTrainer:Lookahead:la_steps, Value: 6
      trainer:StandardTrainer:se_lastk, Constant: 3
      trainer:StandardTrainer:use_lookahead_optimizer, Value: True
      trainer:StandardTrainer:use_snapshot_ensemble, Value: True
      trainer:StandardTrainer:use_stochastic_weight_averaging, Value: True
      trainer:StandardTrainer:weighted_loss, Constant: 1
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=8.837650775909424, wallclock_time=10.565325498580933, budget=5.555555555555555), TrajEntry(train_perf=0.15204678362573099, incumbent_id=2, incumbent=Configuration:
      data_loader:batch_size, Value: 306
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:Nystroem:coef0, Value: -0.0949783621375686
      feature_preprocessor:Nystroem:kernel, Value: 'sigmoid'
      feature_preprocessor:Nystroem:n_components, Value: 5
      feature_preprocessor:__choice__, Value: 'Nystroem'
      imputer:categorical_strategy, Value: 'constant_!missing!'
      imputer:numerical_strategy, Value: 'median'
      lr_scheduler:StepLR:gamma, Value: 0.8149995369572995
      lr_scheduler:StepLR:step_size, Value: 9
      lr_scheduler:__choice__, Value: 'StepLR'
      network_backbone:ShapedResNetBackbone:activation, Value: 'relu'
      network_backbone:ShapedResNetBackbone:blocks_per_group, Value: 2
      network_backbone:ShapedResNetBackbone:max_units, Value: 33
      network_backbone:ShapedResNetBackbone:num_groups, Value: 5
      network_backbone:ShapedResNetBackbone:output_dim, Value: 184
      network_backbone:ShapedResNetBackbone:resnet_shape, Value: 'diamond'
      network_backbone:ShapedResNetBackbone:use_batch_norm, Value: True
      network_backbone:ShapedResNetBackbone:use_dropout, Value: False
      network_backbone:ShapedResNetBackbone:use_skip_connection, Value: False
      network_backbone:__choice__, Value: 'ShapedResNetBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'no_head'
      network_head:no_head:activation, Value: 'relu'
      network_init:XavierInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:RMSpropOptimizer:alpha, Value: 0.7685403786764007
      optimizer:RMSpropOptimizer:lr, Value: 0.005509731025758796
      optimizer:RMSpropOptimizer:momentum, Value: 0.8642852923057781
      optimizer:RMSpropOptimizer:use_weight_decay, Value: False
      optimizer:__choice__, Value: 'RMSpropOptimizer'
      scaler:Normalizer:norm, Value: 'max'
      scaler:__choice__, Value: 'Normalizer'
      trainer:AdversarialTrainer:Lookahead:la_alpha, Value: 0.5926210942083824
      trainer:AdversarialTrainer:Lookahead:la_steps, Value: 8
      trainer:AdversarialTrainer:epsilon, Constant: 0.007
      trainer:AdversarialTrainer:use_lookahead_optimizer, Value: True
      trainer:AdversarialTrainer:use_snapshot_ensemble, Value: False
      trainer:AdversarialTrainer:use_stochastic_weight_averaging, Value: False
      trainer:AdversarialTrainer:weighted_loss, Constant: 1
      trainer:__choice__, Value: 'AdversarialTrainer'
    , ta_runs=15, ta_time_used=213.18989634513855, wallclock_time=261.9260311126709, budget=50.0)]
    {'accuracy': 0.861271676300578}
    |    | Preprocessing                                                 | Estimator                                                          |   Weight |
    |---:|:--------------------------------------------------------------|:-------------------------------------------------------------------|---------:|
    |  0 | SimpleImputer,NoEncoder,MinMaxScaler,KitchenSink              | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.28 |
    |  1 | None                                                          | SVC                                                                |     0.14 |
    |  2 | None                                                          | CatBoostClassifier                                                 |     0.12 |
    |  3 | SimpleImputer,NoEncoder,Normalizer,KernelPCA                  | no embedding,ResNetBackbone,NoHead,nn.Sequential                   |     0.08 |
    |  4 | SimpleImputer,NoEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.08 |
    |  5 | None                                                          | LGBMClassifier                                                     |     0.06 |
    |  6 | None                                                          | KNNClassifier                                                      |     0.06 |
    |  7 | None                                                          | RFClassifier                                                       |     0.04 |
    |  8 | None                                                          | ExtraTreesClassifier                                               |     0.04 |
    |  9 | SimpleImputer,NoEncoder,StandardScaler,KernelPCA              | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.02 |
    | 10 | SimpleImputer,NoEncoder,Normalizer,Nystroem                   | no embedding,ShapedResNetBackbone,NoHead,nn.Sequential             |     0.02 |
    | 11 | SimpleImputer,NoEncoder,Normalizer,Nystroem                   | no embedding,ShapedResNetBackbone,NoHead,nn.Sequential             |     0.02 |
    | 12 | SimpleImputer,NoEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.02 |
    | 13 | SimpleImputer,NoEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.02 |






|

.. code-block:: default

    import os
    import tempfile as tmp
    import warnings

    os.environ['JOBLIB_TEMP_FOLDER'] = tmp.gettempdir()
    os.environ['OMP_NUM_THREADS'] = '1'
    os.environ['OPENBLAS_NUM_THREADS'] = '1'
    os.environ['MKL_NUM_THREADS'] = '1'

    warnings.simplefilter(action='ignore', category=UserWarning)
    warnings.simplefilter(action='ignore', category=FutureWarning)

    import sklearn.datasets
    import sklearn.model_selection

    from autoPyTorch.api.tabular_classification import TabularClassificationTask
    from autoPyTorch.utils.hyperparameter_search_space_update import HyperparameterSearchSpaceUpdates


    def get_search_space_updates():
        """
        Search space updates to the task can be added using HyperparameterSearchSpaceUpdates
        Returns:
            HyperparameterSearchSpaceUpdates
        """
        updates = HyperparameterSearchSpaceUpdates()
        updates.append(node_name="data_loader",
                       hyperparameter="batch_size",
                       value_range=[16, 512],
                       default_value=32)
        updates.append(node_name="lr_scheduler",
                       hyperparameter="CosineAnnealingLR:T_max",
                       value_range=[50, 60],
                       default_value=55)
        updates.append(node_name='network_backbone',
                       hyperparameter='ResNetBackbone:dropout',
                       value_range=[0, 0.5],
                       default_value=0.2)
        updates.append(node_name='network_backbone',
                       hyperparameter='ResNetBackbone:multi_branch_choice',
                       value_range=['shake-shake'],
                       default_value='shake-shake')
        updates.append(node_name='network_backbone',
                       hyperparameter='ResNetBackbone:shake_shake_update_func',
                       value_range=['M3'],
                       default_value='M3'
                       )
        return updates


    if __name__ == '__main__':

        ############################################################################
        # Data Loading
        # ============
        X, y = sklearn.datasets.fetch_openml(data_id=40981, return_X_y=True, as_frame=True)
        X_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(
            X,
            y,
            random_state=1,
        )

        ############################################################################
        # Build and fit a classifier with include components
        # ==================================================
        api = TabularClassificationTask(
            search_space_updates=get_search_space_updates(),
            include_components={'network_backbone': ['ResNetBackbone'],
                                'encoder': ['OneHotEncoder']}
        )

        ############################################################################
        # Search for an ensemble of machine learning algorithms
        # =====================================================
        api.search(
            X_train=X_train.copy(),
            y_train=y_train.copy(),
            X_test=X_test.copy(),
            y_test=y_test.copy(),
            optimize_metric='accuracy',
            total_walltime_limit=300,
            func_eval_time_limit_secs=50
        )

        ############################################################################
        # Print the final ensemble performance
        # ====================================
        print(api.run_history, api.trajectory)
        y_pred = api.predict(X_test)
        score = api.score(y_pred, y_test)
        print(score)
        print(api.show_models())

        ############################################################################
        # Build and fit a classifier with exclude components
        # ==================================================
        api = TabularClassificationTask(
            search_space_updates=get_search_space_updates(),
            exclude_components={'network_backbone': ['MLPBackbone'],
                                'encoder': ['OneHotEncoder']}
        )

        ############################################################################
        # Search for an ensemble of machine learning algorithms
        # =====================================================
        api.search(
            X_train=X_train,
            y_train=y_train,
            X_test=X_test.copy(),
            y_test=y_test.copy(),
            optimize_metric='accuracy',
            total_walltime_limit=300,
            func_eval_time_limit_secs=50
        )

        ############################################################################
        # Print the final ensemble performance
        # ====================================
        print(api.run_history, api.trajectory)
        y_pred = api.predict(X_test)
        score = api.score(y_pred, y_test)
        print(score)
        print(api.show_models())


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 12 minutes  9.380 seconds)


.. _sphx_glr_download_advanced_tabular_example_custom_configuration_space.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/automl/Auto-PyTorch/refactor_development?urlpath=lab/tree/notebooks/advanced_tabular/example_custom_configuration_space.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_custom_configuration_space.py <example_custom_configuration_space.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_custom_configuration_space.ipynb <example_custom_configuration_space.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
