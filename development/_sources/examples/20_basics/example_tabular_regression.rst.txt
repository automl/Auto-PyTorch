
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/20_basics/example_tabular_regression.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_20_basics_example_tabular_regression.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_20_basics_example_tabular_regression.py:


======================
Tabular Regression
======================

The following example shows how to fit a sample regression model
with AutoPyTorch

.. GENERATED FROM PYTHON SOURCE LINES 9-27

.. code-block:: default

    import os
    import tempfile as tmp
    import warnings

    import sklearn.datasets
    import sklearn.model_selection

    os.environ['JOBLIB_TEMP_FOLDER'] = tmp.gettempdir()
    os.environ['OMP_NUM_THREADS'] = '1'
    os.environ['OPENBLAS_NUM_THREADS'] = '1'
    os.environ['MKL_NUM_THREADS'] = '1'

    warnings.simplefilter(action='ignore', category=UserWarning)
    warnings.simplefilter(action='ignore', category=FutureWarning)

    from autoPyTorch.api.tabular_regression import TabularRegressionTask









.. GENERATED FROM PYTHON SOURCE LINES 28-30

Data Loading
============

.. GENERATED FROM PYTHON SOURCE LINES 30-37

.. code-block:: default

    X, y = sklearn.datasets.fetch_openml(name='boston', return_X_y=True, as_frame=True)
    X_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(
        X,
        y,
        random_state=1,
    )








.. GENERATED FROM PYTHON SOURCE LINES 38-40

Build and fit a regressor
==========================

.. GENERATED FROM PYTHON SOURCE LINES 40-42

.. code-block:: default

    api = TabularRegressionTask()








.. GENERATED FROM PYTHON SOURCE LINES 43-45

Search for an ensemble of machine learning algorithms
=====================================================

.. GENERATED FROM PYTHON SOURCE LINES 45-55

.. code-block:: default

    api.search(
        X_train=X_train,
        y_train=y_train,
        X_test=X_test.copy(),
        y_test=y_test.copy(),
        optimize_metric='r2',
        total_walltime_limit=300,
        func_eval_time_limit_secs=50,
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <autoPyTorch.api.tabular_regression.TabularRegressionTask object at 0x7fb3031c4c70>



.. GENERATED FROM PYTHON SOURCE LINES 56-58

Print the final ensemble performance
====================================

.. GENERATED FROM PYTHON SOURCE LINES 58-67

.. code-block:: default

    print(api.run_history, api.trajectory)
    y_pred = api.predict(X_test)

    # Rescale the Neural Network predictions into the original target range
    score = api.score(y_pred, y_test)

    print(score)
    # Print the final ensemble built by AutoPyTorch
    print(api.show_models())




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <smac.runhistory.runhistory.RunHistory object at 0x7fb2ec5a70a0> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.0012106895446777344, budget=0), TrajEntry(train_perf=4.9408606026215836, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=1.3904099464416504, wallclock_time=2.497067451477051, budget=5.555555555555555), TrajEntry(train_perf=1.0, incumbent_id=2, incumbent=Configuration:
      data_loader:batch_size, Value: 165
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:TruncatedSVD:target_dim, Value: 5
      feature_preprocessor:__choice__, Value: 'TruncatedSVD'
      imputer:categorical_strategy, Value: 'constant_!missing!'
      imputer:numerical_strategy, Value: 'constant_zero'
      lr_scheduler:__choice__, Value: 'NoScheduler'
      network_backbone:ShapedMLPBackbone:activation, Value: 'sigmoid'
      network_backbone:ShapedMLPBackbone:max_units, Value: 180
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'brick'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 9
      network_backbone:ShapedMLPBackbone:output_dim, Value: 290
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:num_layers, Value: 1
      network_init:KaimingInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'KaimingInit'
      optimizer:SGDOptimizer:lr, Value: 0.018713326743528682
      optimizer:SGDOptimizer:momentum, Value: 0.7018445863802844
      optimizer:SGDOptimizer:weight_decay, Value: 0.0005548789551393707
      optimizer:__choice__, Value: 'SGDOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=5, ta_time_used=10.66382646560669, wallclock_time=17.106947898864746, budget=5.555555555555555), TrajEntry(train_perf=0.9809322573013144, incumbent_id=3, incumbent=Configuration:
      data_loader:batch_size, Value: 56
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:Nystroem:kernel, Value: 'cosine'
      feature_preprocessor:Nystroem:n_components, Value: 6
      feature_preprocessor:__choice__, Value: 'Nystroem'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.3850058283608783
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 15
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 589
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'hexagon'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 7
      network_backbone:ShapedMLPBackbone:output_dim, Value: 1014
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:LearnedEntityEmbedding:dimension_reduction_0, Value: 0.7267369215034201
      network_embedding:LearnedEntityEmbedding:dimension_reduction_1, Value: 0.2839111482234933
      network_embedding:LearnedEntityEmbedding:min_unique_values_for_embedding, Value: 3
      network_embedding:__choice__, Value: 'LearnedEntityEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 3
      network_head:fully_connected:units_layer_1, Value: 302
      network_head:fully_connected:units_layer_2, Value: 311
      network_init:KaimingInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'KaimingInit'
      optimizer:AdamOptimizer:beta1, Value: 0.8536757745741076
      optimizer:AdamOptimizer:beta2, Value: 0.9079365084406695
      optimizer:AdamOptimizer:lr, Value: 0.019009321461110597
      optimizer:AdamOptimizer:weight_decay, Value: 0.012329771142547054
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'NoScaler'
      trainer:MixUpTrainer:alpha, Value: 0.19515049217885105
      trainer:__choice__, Value: 'MixUpTrainer'
    , ta_runs=10, ta_time_used=24.10365104675293, wallclock_time=36.13002610206604, budget=16.666666666666664)]
    {'r2': 0.9153034112747092}
    |    | Preprocessing   | Estimator   |   Weight |
    |---:|:----------------|:------------|---------:|
    |  0 | None            | CBLearner   |     0.68 |
    |  1 | None            | LGBMLearner |     0.32 |





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  41.544 seconds)


.. _sphx_glr_download_examples_20_basics_example_tabular_regression.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/automl/Auto-PyTorch/development?urlpath=lab/tree/notebooks/examples/20_basics/example_tabular_regression.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_tabular_regression.py <example_tabular_regression.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_tabular_regression.ipynb <example_tabular_regression.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
