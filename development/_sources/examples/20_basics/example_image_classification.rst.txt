
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/20_basics/example_image_classification.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_20_basics_example_image_classification.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_20_basics_example_image_classification.py:


======================
Image Classification
======================

.. GENERATED FROM PYTHON SOURCE LINES 6-55




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz to ../datasets/FashionMNIST/raw/train-images-idx3-ubyte.gz
      0%|          | 0/26421880 [00:00<?, ?it/s]      0%|          | 14336/26421880 [00:00<03:35, 122292.07it/s]      0%|          | 44032/26421880 [00:00<02:13, 197730.64it/s]      0%|          | 104448/26421880 [00:00<01:17, 339745.48it/s]      1%|          | 201728/26421880 [00:00<00:49, 528167.94it/s]      2%|1         | 419840/26421880 [00:00<00:26, 999712.34it/s]      3%|3         | 855040/26421880 [00:00<00:13, 1901446.61it/s]      7%|6         | 1725440/26421880 [00:00<00:06, 3665034.86it/s]     13%|#3        | 3466240/26421880 [00:00<00:03, 7151247.78it/s]     24%|##4       | 6360064/26421880 [00:01<00:01, 12518252.27it/s]     35%|###4      | 9121792/26421880 [00:01<00:01, 15815445.32it/s]     45%|####5     | 11994112/26421880 [00:01<00:00, 18361080.97it/s]     56%|#####6    | 14923776/26421880 [00:01<00:00, 20263901.99it/s]     68%|######7   | 17897472/26421880 [00:01<00:00, 21687042.59it/s]     78%|#######8  | 20665344/26421880 [00:01<00:00, 22143464.45it/s]     90%|########9 | 23724032/26421880 [00:01<00:00, 23205123.05it/s]    26422272it [00:01, 14599498.50it/s]                              
    Extracting ../datasets/FashionMNIST/raw/train-images-idx3-ubyte.gz to ../datasets/FashionMNIST/raw

    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz to ../datasets/FashionMNIST/raw/train-labels-idx1-ubyte.gz
      0%|          | 0/29515 [00:00<?, ?it/s]     45%|####5     | 13312/29515 [00:00<00:00, 113803.19it/s]    29696it [00:00, 252390.19it/s]                           
    Extracting ../datasets/FashionMNIST/raw/train-labels-idx1-ubyte.gz to ../datasets/FashionMNIST/raw

    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz to ../datasets/FashionMNIST/raw/t10k-images-idx3-ubyte.gz
      0%|          | 0/4422102 [00:00<?, ?it/s]      0%|          | 14336/4422102 [00:00<00:39, 111548.69it/s]      1%|1         | 45056/4422102 [00:00<00:23, 185955.59it/s]      2%|2         | 105472/4422102 [00:00<00:13, 314668.97it/s]      5%|4         | 219136/4422102 [00:00<00:07, 538186.11it/s]     10%|#         | 454656/4422102 [00:00<00:03, 1001128.78it/s]     21%|##        | 923648/4422102 [00:00<00:01, 1893592.11it/s]     42%|####2     | 1863680/4422102 [00:00<00:00, 3652171.72it/s]     85%|########4 | 3742720/4422102 [00:01<00:00, 7112943.00it/s]    4422656it [00:01, 4262242.08it/s]                             
    Extracting ../datasets/FashionMNIST/raw/t10k-images-idx3-ubyte.gz to ../datasets/FashionMNIST/raw

    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz to ../datasets/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz
      0%|          | 0/5148 [00:00<?, ?it/s]    6144it [00:00, 26135703.63it/s]         
    Extracting ../datasets/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz to ../datasets/FashionMNIST/raw

    Pipeline CS:
     ________________________________________ 
    Configuration space object:
      Hyperparameters:
        image_augmenter:GaussianBlur:sigma_min, Type: UniformFloat, Range: [0.0, 3.0], Default: 0.0
        image_augmenter:GaussianBlur:sigma_offset, Type: UniformFloat, Range: [0.0, 3.0], Default: 0.5
        image_augmenter:GaussianBlur:use_augmenter, Type: Categorical, Choices: {True, False}, Default: True
        image_augmenter:GaussianNoise:sigma_offset, Type: UniformFloat, Range: [0.0, 3.0], Default: 0.3
        image_augmenter:GaussianNoise:use_augmenter, Type: Categorical, Choices: {True, False}, Default: True
        image_augmenter:RandomAffine:rotate, Type: UniformInteger, Range: [0, 360], Default: 45
        image_augmenter:RandomAffine:scale_offset, Type: UniformFloat, Range: [0.0, 0.4], Default: 0.2
        image_augmenter:RandomAffine:shear, Type: UniformInteger, Range: [0, 45], Default: 30
        image_augmenter:RandomAffine:translate_percent_offset, Type: UniformFloat, Range: [0.0, 0.4], Default: 0.2
        image_augmenter:RandomAffine:use_augmenter, Type: Categorical, Choices: {True, False}, Default: True
        image_augmenter:RandomCutout:p, Type: UniformFloat, Range: [0.2, 1.0], Default: 0.5
        image_augmenter:RandomCutout:use_augmenter, Type: Categorical, Choices: {True, False}, Default: True
        image_augmenter:Resize:use_augmenter, Type: Categorical, Choices: {True, False}, Default: True
        image_augmenter:ZeroPadAndCrop:percent, Type: UniformFloat, Range: [0.0, 0.5], Default: 0.1
        normalizer:__choice__, Type: Categorical, Choices: {ImageNormalizer, NoNormalizer}, Default: ImageNormalizer
      Conditions:
        image_augmenter:GaussianBlur:sigma_min | image_augmenter:GaussianBlur:use_augmenter == True
        image_augmenter:GaussianBlur:sigma_offset | image_augmenter:GaussianBlur:use_augmenter == True
        image_augmenter:GaussianNoise:sigma_offset | image_augmenter:GaussianNoise:use_augmenter == True
        image_augmenter:RandomAffine:rotate | image_augmenter:RandomAffine:use_augmenter == True
        image_augmenter:RandomAffine:scale_offset | image_augmenter:RandomAffine:use_augmenter == True
        image_augmenter:RandomAffine:shear | image_augmenter:RandomAffine:use_augmenter == True
        image_augmenter:RandomAffine:translate_percent_offset | image_augmenter:RandomAffine:use_augmenter == True
        image_augmenter:RandomCutout:p | image_augmenter:RandomCutout:use_augmenter == True

    Pipeline Random Config:
     ________________________________________ 
    Configuration(values={
      'image_augmenter:GaussianBlur:sigma_min': 1.9107487459187786,
      'image_augmenter:GaussianBlur:sigma_offset': 2.50639739019364,
      'image_augmenter:GaussianBlur:use_augmenter': True,
      'image_augmenter:GaussianNoise:use_augmenter': False,
      'image_augmenter:RandomAffine:use_augmenter': False,
      'image_augmenter:RandomCutout:p': 0.251688124093758,
      'image_augmenter:RandomCutout:use_augmenter': True,
      'image_augmenter:Resize:use_augmenter': False,
      'image_augmenter:ZeroPadAndCrop:percent': 0.3604809630526895,
      'normalizer:__choice__': 'ImageNormalizer',
    })

    Fitting the pipeline...
    ________________________________________
            ImageClassificationPipeline
    ________________________________________
    0-) normalizer: 
            ImageNormalizer

    1-) preprocessing: 
            EarlyPreprocessing

    2-) image_augmenter: 
            ImageAugmenter

    ________________________________________






|

.. code-block:: default

    import numpy as np

    import sklearn.model_selection

    import torchvision.datasets

    from autoPyTorch.pipeline.image_classification import ImageClassificationPipeline

    # Get the training data for tabular classification
    trainset = torchvision.datasets.FashionMNIST(root='../datasets/', train=True, download=True)
    data = trainset.data.numpy()
    data = np.expand_dims(data, axis=3)
    # Create a proof of concept pipeline!
    dataset_properties = dict()
    pipeline = ImageClassificationPipeline(dataset_properties=dataset_properties)

    # Train and test split
    train_indices, val_indices = sklearn.model_selection.train_test_split(
        list(range(data.shape[0])),
        random_state=1,
        test_size=0.25,
    )

    # Configuration space
    pipeline_cs = pipeline.get_hyperparameter_search_space()
    print("Pipeline CS:\n", '_' * 40, f"\n{pipeline_cs}")
    config = pipeline_cs.sample_configuration()
    print("Pipeline Random Config:\n", '_' * 40, f"\n{config}")
    pipeline.set_hyperparameters(config)

    # Fit the pipeline
    print("Fitting the pipeline...")

    pipeline.fit(X=dict(X_train=data,
                        is_small_preprocess=True,
                        dataset_properties=dict(mean=np.array([np.mean(data[:, :, :, i]) for i in range(1)]),
                                                std=np.array([np.std(data[:, :, :, i]) for i in range(1)]),
                                                num_classes=10,
                                                num_features=data.shape[1] * data.shape[2],
                                                image_height=data.shape[1],
                                                image_width=data.shape[2],
                                                is_small_preprocess=True),
                        train_indices=train_indices,
                        val_indices=val_indices,
                        )
                 )

    # Showcase some components of the pipeline
    print(pipeline)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.817 seconds)


.. _sphx_glr_download_examples_20_basics_example_image_classification.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/automl/Auto-PyTorch/development?urlpath=lab/tree/notebooks/examples/20_basics/example_image_classification.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_image_classification.py <example_image_classification.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_image_classification.ipynb <example_image_classification.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
