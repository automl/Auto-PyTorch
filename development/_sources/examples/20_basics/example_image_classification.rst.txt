
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/20_basics/example_image_classification.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_20_basics_example_image_classification.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_20_basics_example_image_classification.py:


======================
Image Classification
======================

.. GENERATED FROM PYTHON SOURCE LINES 6-55




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz to ../datasets/FashionMNIST/raw/train-images-idx3-ubyte.gz
      0%|          | 0/26421880 [00:00<?, ?it/s]      0%|          | 32768/26421880 [00:00<01:53, 231928.47it/s]      0%|          | 65536/26421880 [00:00<01:54, 230908.71it/s]      0%|          | 131072/26421880 [00:00<01:18, 335717.81it/s]      1%|          | 229376/26421880 [00:00<00:55, 475759.79it/s]      2%|1         | 425984/26421880 [00:00<00:32, 802339.36it/s]      3%|3         | 884736/26421880 [00:00<00:15, 1625120.17it/s]      7%|6         | 1736704/26421880 [00:00<00:08, 3049193.29it/s]     13%|#3        | 3473408/26421880 [00:01<00:03, 5962888.68it/s]     25%|##4       | 6488064/26421880 [00:01<00:01, 10712916.76it/s]     36%|###5      | 9469952/26421880 [00:01<00:01, 13863205.21it/s]     47%|####6     | 12320768/26421880 [00:01<00:00, 15731289.51it/s]     58%|#####8    | 15368192/26421880 [00:01<00:00, 17458237.61it/s]     69%|######9   | 18317312/26421880 [00:01<00:00, 18442026.10it/s]     80%|########  | 21200896/26421880 [00:01<00:00, 18980240.42it/s]     91%|######### | 24018944/26421880 [00:02<00:00, 19215170.92it/s]    100%|##########| 26421880/26421880 [00:02<00:00, 12287565.88it/s]
    Extracting ../datasets/FashionMNIST/raw/train-images-idx3-ubyte.gz to ../datasets/FashionMNIST/raw

    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz to ../datasets/FashionMNIST/raw/train-labels-idx1-ubyte.gz
      0%|          | 0/29515 [00:00<?, ?it/s]    100%|##########| 29515/29515 [00:00<00:00, 211498.05it/s]    100%|##########| 29515/29515 [00:00<00:00, 211025.39it/s]
    Extracting ../datasets/FashionMNIST/raw/train-labels-idx1-ubyte.gz to ../datasets/FashionMNIST/raw

    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz to ../datasets/FashionMNIST/raw/t10k-images-idx3-ubyte.gz
      0%|          | 0/4422102 [00:00<?, ?it/s]      1%|          | 32768/4422102 [00:00<00:18, 231252.57it/s]      1%|1         | 65536/4422102 [00:00<00:18, 230353.14it/s]      3%|2         | 131072/4422102 [00:00<00:12, 335518.37it/s]      5%|5         | 229376/4422102 [00:00<00:08, 475818.21it/s]     10%|9         | 425984/4422102 [00:00<00:04, 802625.41it/s]     20%|##        | 884736/4422102 [00:00<00:02, 1625946.95it/s]     39%|###9      | 1736704/4422102 [00:00<00:00, 3050846.50it/s]     79%|#######8  | 3473408/4422102 [00:01<00:00, 5961671.44it/s]    100%|##########| 4422102/4422102 [00:01<00:00, 3878389.21it/s]
    Extracting ../datasets/FashionMNIST/raw/t10k-images-idx3-ubyte.gz to ../datasets/FashionMNIST/raw

    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz to ../datasets/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz
      0%|          | 0/5148 [00:00<?, ?it/s]    100%|##########| 5148/5148 [00:00<00:00, 40359396.25it/s]
    Extracting ../datasets/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz to ../datasets/FashionMNIST/raw

    Pipeline CS:
     ________________________________________ 
    Configuration space object:
      Hyperparameters:
        image_augmenter:GaussianBlur:sigma_min, Type: UniformFloat, Range: [0.0, 3.0], Default: 0.0
        image_augmenter:GaussianBlur:sigma_offset, Type: UniformFloat, Range: [0.0, 3.0], Default: 0.5
        image_augmenter:GaussianBlur:use_augmenter, Type: Categorical, Choices: {True, False}, Default: True
        image_augmenter:GaussianNoise:sigma_offset, Type: UniformFloat, Range: [0.0, 3.0], Default: 0.3
        image_augmenter:GaussianNoise:use_augmenter, Type: Categorical, Choices: {True, False}, Default: True
        image_augmenter:RandomAffine:rotate, Type: UniformInteger, Range: [0, 360], Default: 45
        image_augmenter:RandomAffine:scale_offset, Type: UniformFloat, Range: [0.0, 0.4], Default: 0.2
        image_augmenter:RandomAffine:shear, Type: UniformInteger, Range: [0, 45], Default: 30
        image_augmenter:RandomAffine:translate_percent_offset, Type: UniformFloat, Range: [0.0, 0.4], Default: 0.2
        image_augmenter:RandomAffine:use_augmenter, Type: Categorical, Choices: {True, False}, Default: True
        image_augmenter:RandomCutout:p, Type: UniformFloat, Range: [0.2, 1.0], Default: 0.5
        image_augmenter:RandomCutout:use_augmenter, Type: Categorical, Choices: {True, False}, Default: True
        image_augmenter:Resize:use_augmenter, Type: Categorical, Choices: {True, False}, Default: True
        image_augmenter:ZeroPadAndCrop:percent, Type: UniformFloat, Range: [0.0, 0.5], Default: 0.1
        normalizer:__choice__, Type: Categorical, Choices: {ImageNormalizer, NoNormalizer}, Default: ImageNormalizer
      Conditions:
        image_augmenter:GaussianBlur:sigma_min | image_augmenter:GaussianBlur:use_augmenter == True
        image_augmenter:GaussianBlur:sigma_offset | image_augmenter:GaussianBlur:use_augmenter == True
        image_augmenter:GaussianNoise:sigma_offset | image_augmenter:GaussianNoise:use_augmenter == True
        image_augmenter:RandomAffine:rotate | image_augmenter:RandomAffine:use_augmenter == True
        image_augmenter:RandomAffine:scale_offset | image_augmenter:RandomAffine:use_augmenter == True
        image_augmenter:RandomAffine:shear | image_augmenter:RandomAffine:use_augmenter == True
        image_augmenter:RandomAffine:translate_percent_offset | image_augmenter:RandomAffine:use_augmenter == True
        image_augmenter:RandomCutout:p | image_augmenter:RandomCutout:use_augmenter == True

    Pipeline Random Config:
     ________________________________________ 
    Configuration(values={
      'image_augmenter:GaussianBlur:use_augmenter': False,
      'image_augmenter:GaussianNoise:use_augmenter': False,
      'image_augmenter:RandomAffine:rotate': 0,
      'image_augmenter:RandomAffine:scale_offset': 0.09817883435719255,
      'image_augmenter:RandomAffine:shear': 3,
      'image_augmenter:RandomAffine:translate_percent_offset': 0.092968162759446,
      'image_augmenter:RandomAffine:use_augmenter': True,
      'image_augmenter:RandomCutout:use_augmenter': False,
      'image_augmenter:Resize:use_augmenter': True,
      'image_augmenter:ZeroPadAndCrop:percent': 0.011876312992094795,
      'normalizer:__choice__': 'NoNormalizer',
    })

    Fitting the pipeline...
    ________________________________________
            ImageClassificationPipeline
    ________________________________________
    0-) normalizer: 
            NoNormalizer

    1-) preprocessing: 
            EarlyPreprocessing

    2-) image_augmenter: 
            ImageAugmenter

    ________________________________________






|

.. code-block:: default

    import numpy as np

    import sklearn.model_selection

    import torchvision.datasets

    from autoPyTorch.pipeline.image_classification import ImageClassificationPipeline

    # Get the training data for tabular classification
    trainset = torchvision.datasets.FashionMNIST(root='../datasets/', train=True, download=True)
    data = trainset.data.numpy()
    data = np.expand_dims(data, axis=3)
    # Create a proof of concept pipeline!
    dataset_properties = dict()
    pipeline = ImageClassificationPipeline(dataset_properties=dataset_properties)

    # Train and test split
    train_indices, val_indices = sklearn.model_selection.train_test_split(
        list(range(data.shape[0])),
        random_state=1,
        test_size=0.25,
    )

    # Configuration space
    pipeline_cs = pipeline.get_hyperparameter_search_space()
    print("Pipeline CS:\n", '_' * 40, f"\n{pipeline_cs}")
    config = pipeline_cs.sample_configuration()
    print("Pipeline Random Config:\n", '_' * 40, f"\n{config}")
    pipeline.set_hyperparameters(config)

    # Fit the pipeline
    print("Fitting the pipeline...")

    pipeline.fit(X=dict(X_train=data,
                        is_small_preprocess=True,
                        dataset_properties=dict(mean=np.array([np.mean(data[:, :, :, i]) for i in range(1)]),
                                                std=np.array([np.std(data[:, :, :, i]) for i in range(1)]),
                                                num_classes=10,
                                                num_features=data.shape[1] * data.shape[2],
                                                image_height=data.shape[1],
                                                image_width=data.shape[2],
                                                is_small_preprocess=True),
                        train_indices=train_indices,
                        val_indices=val_indices,
                        )
                 )

    # Showcase some components of the pipeline
    print(pipeline)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.988 seconds)


.. _sphx_glr_download_examples_20_basics_example_image_classification.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/automl/Auto-PyTorch/development?urlpath=lab/tree/notebooks/examples/20_basics/example_image_classification.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: example_image_classification.py <example_image_classification.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: example_image_classification.ipynb <example_image_classification.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
