
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/40_advanced/example_run_with_portfolio.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_40_advanced_example_run_with_portfolio.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_40_advanced_example_run_with_portfolio.py:


============================================
Tabular Classification with Greedy Portfolio
============================================

The following example shows how to fit a sample classification model
with AutoPyTorch using the greedy portfolio

.. GENERATED FROM PYTHON SOURCE LINES 9-72




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <smac.runhistory.runhistory.RunHistory object at 0x7f04ee2790a0> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 60
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:CosineAnnealingLR:T_max, Value: 50
      lr_scheduler:__choice__, Value: 'CosineAnnealingLR'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_dropout, Value: 0.023271935735825866
      network_backbone:ShapedMLPBackbone:max_units, Value: 290
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 6
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: True
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.00020060142055000713
      optimizer:AdamOptimizer:weight_decay, Value: 0.0018320003468984575
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:MixUpTrainer:alpha, Value: 0.8448753109694546
      trainer:MixUpTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'MixUpTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.00014543533325195312, budget=0), TrajEntry(train_perf=0.216374269005848, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 60
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:CosineAnnealingLR:T_max, Value: 50
      lr_scheduler:__choice__, Value: 'CosineAnnealingLR'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_dropout, Value: 0.023271935735825866
      network_backbone:ShapedMLPBackbone:max_units, Value: 290
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 6
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: True
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.00020060142055000713
      optimizer:AdamOptimizer:weight_decay, Value: 0.0018320003468984575
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:MixUpTrainer:alpha, Value: 0.8448753109694546
      trainer:MixUpTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'MixUpTrainer'
    , ta_runs=1, ta_time_used=2.173197031021118, wallclock_time=3.2093398571014404, budget=5.555555555555555), TrajEntry(train_perf=0.19298245614035092, incumbent_id=2, incumbent=Configuration:
      data_loader:batch_size, Value: 255
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:CosineAnnealingLR:T_max, Value: 50
      lr_scheduler:__choice__, Value: 'CosineAnnealingLR'
      network_backbone:ShapedResNetBackbone:activation, Value: 'relu'
      network_backbone:ShapedResNetBackbone:blocks_per_group, Value: 2
      network_backbone:ShapedResNetBackbone:max_dropout, Value: 0.7662454727603789
      network_backbone:ShapedResNetBackbone:max_shake_drop_probability, Value: 0.30409463597128383
      network_backbone:ShapedResNetBackbone:max_units, Value: 41
      network_backbone:ShapedResNetBackbone:num_groups, Value: 4
      network_backbone:ShapedResNetBackbone:output_dim, Value: 200
      network_backbone:ShapedResNetBackbone:resnet_shape, Value: 'funnel'
      network_backbone:ShapedResNetBackbone:use_dropout, Value: True
      network_backbone:ShapedResNetBackbone:use_shake_drop, Value: True
      network_backbone:ShapedResNetBackbone:use_shake_shake, Value: False
      network_backbone:__choice__, Value: 'ShapedResNetBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.011526647986073339
      optimizer:AdamOptimizer:weight_decay, Value: 0.031290291410446765
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=2, ta_time_used=4.373682498931885, wallclock_time=6.627197980880737, budget=5.555555555555555), TrajEntry(train_perf=0.17543859649122806, incumbent_id=3, incumbent=Configuration:
      data_loader:batch_size, Value: 299
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:CosineAnnealingLR:T_max, Value: 50
      lr_scheduler:__choice__, Value: 'CosineAnnealingLR'
      network_backbone:ShapedResNetBackbone:activation, Value: 'relu'
      network_backbone:ShapedResNetBackbone:blocks_per_group, Value: 2
      network_backbone:ShapedResNetBackbone:max_units, Value: 279
      network_backbone:ShapedResNetBackbone:num_groups, Value: 2
      network_backbone:ShapedResNetBackbone:output_dim, Value: 200
      network_backbone:ShapedResNetBackbone:resnet_shape, Value: 'funnel'
      network_backbone:ShapedResNetBackbone:use_dropout, Value: False
      network_backbone:ShapedResNetBackbone:use_shake_drop, Value: False
      network_backbone:ShapedResNetBackbone:use_shake_shake, Value: False
      network_backbone:__choice__, Value: 'ShapedResNetBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.0007471732018616978
      optimizer:AdamOptimizer:weight_decay, Value: 0.0005438753720314742
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=4, ta_time_used=9.16077709197998, wallclock_time=13.89360785484314, budget=5.555555555555555), TrajEntry(train_perf=0.1578947368421053, incumbent_id=4, incumbent=Configuration:
      data_loader:batch_size, Value: 48
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:CosineAnnealingLR:T_max, Value: 50
      lr_scheduler:__choice__, Value: 'CosineAnnealingLR'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 529
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 3
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:SGDOptimizer:lr, Value: 0.020107910011636462
      optimizer:SGDOptimizer:momentum, Value: 0.5818716367708677
      optimizer:SGDOptimizer:weight_decay, Value: 0.003995594064278902
      optimizer:__choice__, Value: 'SGDOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=6, ta_time_used=13.836097478866577, wallclock_time=21.143611192703247, budget=5.555555555555555), TrajEntry(train_perf=0.15204678362573099, incumbent_id=5, incumbent=Configuration:
      data_loader:batch_size, Value: 163
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:CosineAnnealingLR:T_max, Value: 50
      lr_scheduler:__choice__, Value: 'CosineAnnealingLR'
      network_backbone:ShapedResNetBackbone:activation, Value: 'relu'
      network_backbone:ShapedResNetBackbone:blocks_per_group, Value: 1
      network_backbone:ShapedResNetBackbone:max_dropout, Value: 0.6341848343636569
      network_backbone:ShapedResNetBackbone:max_units, Value: 171
      network_backbone:ShapedResNetBackbone:num_groups, Value: 3
      network_backbone:ShapedResNetBackbone:output_dim, Value: 200
      network_backbone:ShapedResNetBackbone:resnet_shape, Value: 'funnel'
      network_backbone:ShapedResNetBackbone:use_dropout, Value: True
      network_backbone:ShapedResNetBackbone:use_shake_drop, Value: False
      network_backbone:ShapedResNetBackbone:use_shake_shake, Value: False
      network_backbone:__choice__, Value: 'ShapedResNetBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.002654293880282279
      optimizer:AdamOptimizer:weight_decay, Value: 0.010374059713414468
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=7, ta_time_used=16.082072019577026, wallclock_time=24.6870858669281, budget=5.555555555555555), TrajEntry(train_perf=0.1286549707602339, incumbent_id=6, incumbent=Configuration:
      data_loader:batch_size, Value: 48
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:CosineAnnealingLR:T_max, Value: 50
      lr_scheduler:__choice__, Value: 'CosineAnnealingLR'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 529
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 3
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:SGDOptimizer:lr, Value: 0.020107910011636462
      optimizer:SGDOptimizer:momentum, Value: 0.5818716367708677
      optimizer:SGDOptimizer:weight_decay, Value: 0.003995594064278902
      optimizer:__choice__, Value: 'SGDOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=11, ta_time_used=25.93048620223999, wallclock_time=39.64417266845703, budget=16.666666666666664)]
    {'accuracy': 0.8670520231213873}
    |    | Preprocessing                                                     | Estimator                                                          |   Weight |
    |---:|:------------------------------------------------------------------|:-------------------------------------------------------------------|---------:|
    |  0 | SimpleImputer,OneHotEncoder,NoScaler,PowerTransformer             | embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential    |     0.32 |
    |  1 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.22 |
    |  2 | SimpleImputer,OneHotEncoder,StandardScaler,Nystroem               | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.18 |
    |  3 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.12 |
    |  4 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.1  |
    |  5 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.02 |
    |  6 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.02 |
    |  7 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.02 |






|

.. code-block:: default

    import os
    import tempfile as tmp
    import warnings

    os.environ['JOBLIB_TEMP_FOLDER'] = tmp.gettempdir()
    os.environ['OMP_NUM_THREADS'] = '1'
    os.environ['OPENBLAS_NUM_THREADS'] = '1'
    os.environ['MKL_NUM_THREADS'] = '1'

    warnings.simplefilter(action='ignore', category=UserWarning)
    warnings.simplefilter(action='ignore', category=FutureWarning)

    import sklearn.datasets
    import sklearn.model_selection

    from autoPyTorch.api.tabular_classification import TabularClassificationTask


    if __name__ == '__main__':

        ############################################################################
        # Data Loading
        # ============
        X, y = sklearn.datasets.fetch_openml(data_id=40981, return_X_y=True, as_frame=True)
        X_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(
            X,
            y,
            random_state=42,
        )

        ############################################################################
        # Build and fit a classifier
        # ==========================
        api = TabularClassificationTask(
            seed=42,
        )

        ############################################################################
        # Search for an ensemble of machine learning algorithms
        # =====================================================
        api.search(
            X_train=X_train,
            y_train=y_train,
            X_test=X_test.copy(),
            y_test=y_test.copy(),
            optimize_metric='accuracy',
            total_walltime_limit=300,
            func_eval_time_limit_secs=50,
            # Setting this option to "greedy"
            # will make smac run the configurations
            # present in 'autoPyTorch/configs/greedy_portfolio.json'
            portfolio_selection="greedy"
        )

        ############################################################################
        # Print the final ensemble performance
        # ====================================
        print(api.run_history, api.trajectory)
        y_pred = api.predict(X_test)
        score = api.score(y_pred, y_test)
        print(score)
        # Print the final ensemble built by AutoPyTorch
        print(api.show_models())


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  22.746 seconds)


.. _sphx_glr_download_examples_40_advanced_example_run_with_portfolio.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/automl/Auto-PyTorch/development?urlpath=lab/tree/notebooks/examples/40_advanced/example_run_with_portfolio.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_run_with_portfolio.py <example_run_with_portfolio.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_run_with_portfolio.ipynb <example_run_with_portfolio.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
