
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/40_advanced/example_custom_configuration_space.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_40_advanced_example_custom_configuration_space.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_40_advanced_example_custom_configuration_space.py:


======================
Tabular Classification with Custom Configuration Space
======================

The following example shows how adjust the configuration space of
the search. Currently, there are two changes that can be made to the space:-
1. Adjust individual hyperparameters in the pipeline
2. Include or exclude components:
    a) include: Dictionary containing components to include. Key is the node
                name and Value is an Iterable of the names of the components
                to include. Only these components will be present in the
                search space.
    b) exclude: Dictionary containing components to exclude. Key is the node
                name and Value is an Iterable of the names of the components
                to exclude. All except these components will be present in
                the search space.

.. GENERATED FROM PYTHON SOURCE LINES 19-137




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <smac.runhistory.runhistory.RunHistory object at 0x7f482692e940> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:MLPBackbone:activation, Value: 'relu'
      network_backbone:MLPBackbone:num_groups, Value: 5
      network_backbone:MLPBackbone:num_units_1, Value: 200
      network_backbone:MLPBackbone:num_units_2, Value: 200
      network_backbone:MLPBackbone:num_units_3, Value: 200
      network_backbone:MLPBackbone:num_units_4, Value: 200
      network_backbone:MLPBackbone:num_units_5, Value: 200
      network_backbone:MLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'MLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.0015811920166015625, budget=0), TrajEntry(train_perf=0.19298245614035092, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:MLPBackbone:activation, Value: 'relu'
      network_backbone:MLPBackbone:num_groups, Value: 5
      network_backbone:MLPBackbone:num_units_1, Value: 200
      network_backbone:MLPBackbone:num_units_2, Value: 200
      network_backbone:MLPBackbone:num_units_3, Value: 200
      network_backbone:MLPBackbone:num_units_4, Value: 200
      network_backbone:MLPBackbone:num_units_5, Value: 200
      network_backbone:MLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'MLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=3.5857536792755127, wallclock_time=4.736303329467773, budget=5.555555555555555), TrajEntry(train_perf=0.16959064327485385, incumbent_id=2, incumbent=Configuration:
      data_loader:batch_size, Value: 304
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:TruncatedSVD:target_dim, Value: 3
      feature_preprocessor:__choice__, Value: 'TruncatedSVD'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'constant_zero'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.55356599572456
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 13
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ResNetBackbone:activation, Value: 'tanh'
      network_backbone:ResNetBackbone:blocks_per_group_0, Value: 4
      network_backbone:ResNetBackbone:blocks_per_group_1, Value: 1
      network_backbone:ResNetBackbone:blocks_per_group_2, Value: 4
      network_backbone:ResNetBackbone:blocks_per_group_3, Value: 3
      network_backbone:ResNetBackbone:blocks_per_group_4, Value: 2
      network_backbone:ResNetBackbone:blocks_per_group_5, Value: 3
      network_backbone:ResNetBackbone:dropout_0, Value: 0.3002655800274727
      network_backbone:ResNetBackbone:dropout_1, Value: 0.13081204294715137
      network_backbone:ResNetBackbone:dropout_2, Value: 0.4537660409820574
      network_backbone:ResNetBackbone:dropout_3, Value: 0.10832899181573147
      network_backbone:ResNetBackbone:dropout_4, Value: 0.03929523483467651
      network_backbone:ResNetBackbone:dropout_5, Value: 0.3134138585907201
      network_backbone:ResNetBackbone:num_groups, Value: 5
      network_backbone:ResNetBackbone:num_units_0, Value: 391
      network_backbone:ResNetBackbone:num_units_1, Value: 947
      network_backbone:ResNetBackbone:num_units_2, Value: 715
      network_backbone:ResNetBackbone:num_units_3, Value: 680
      network_backbone:ResNetBackbone:num_units_4, Value: 810
      network_backbone:ResNetBackbone:num_units_5, Value: 428
      network_backbone:ResNetBackbone:use_dropout, Value: True
      network_backbone:ResNetBackbone:use_shake_drop, Value: False
      network_backbone:ResNetBackbone:use_shake_shake, Value: True
      network_backbone:__choice__, Value: 'ResNetBackbone'
      network_embedding:LearnedEntityEmbedding:dimension_reduction_0, Value: 0.8497045350388382
      network_embedding:LearnedEntityEmbedding:dimension_reduction_1, Value: 0.5957228503579414
      network_embedding:LearnedEntityEmbedding:dimension_reduction_2, Value: 0.960608174395614
      network_embedding:LearnedEntityEmbedding:dimension_reduction_3, Value: 0.9323719424903312
      network_embedding:LearnedEntityEmbedding:dimension_reduction_4, Value: 0.23971914188244314
      network_embedding:LearnedEntityEmbedding:dimension_reduction_5, Value: 0.11984137365564085
      network_embedding:LearnedEntityEmbedding:dimension_reduction_6, Value: 0.6812355217040056
      network_embedding:LearnedEntityEmbedding:dimension_reduction_7, Value: 0.4780149199274547
      network_embedding:LearnedEntityEmbedding:min_unique_values_for_embedding, Value: 7
      network_embedding:__choice__, Value: 'LearnedEntityEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:num_layers, Value: 1
      network_init:KaimingInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'KaimingInit'
      optimizer:AdamOptimizer:beta1, Value: 0.8848077128750084
      optimizer:AdamOptimizer:beta2, Value: 0.9520833614784731
      optimizer:AdamOptimizer:lr, Value: 2.5863111132709636e-05
      optimizer:AdamOptimizer:weight_decay, Value: 0.011386186310003932
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: False
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=15, ta_time_used=198.32340335845947, wallclock_time=126.35451698303223, budget=16.666666666666664), TrajEntry(train_perf=0.14619883040935677, incumbent_id=3, incumbent=Configuration:
      data_loader:batch_size, Value: 77
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:PowerTransformer:standardize, Value: False
      feature_preprocessor:__choice__, Value: 'PowerTransformer'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'constant_zero'
      lr_scheduler:StepLR:gamma, Value: 0.06000098606638252
      lr_scheduler:StepLR:step_size, Value: 8
      lr_scheduler:__choice__, Value: 'StepLR'
      network_backbone:MLPBackbone:activation, Value: 'relu'
      network_backbone:MLPBackbone:num_groups, Value: 4
      network_backbone:MLPBackbone:num_units_1, Value: 643
      network_backbone:MLPBackbone:num_units_2, Value: 818
      network_backbone:MLPBackbone:num_units_3, Value: 993
      network_backbone:MLPBackbone:num_units_4, Value: 763
      network_backbone:MLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'MLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'sigmoid'
      network_head:fully_connected:num_layers, Value: 3
      network_head:fully_connected:units_layer_1, Value: 212
      network_head:fully_connected:units_layer_2, Value: 260
      network_init:KaimingInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'KaimingInit'
      optimizer:RMSpropOptimizer:alpha, Value: 0.8486758485405042
      optimizer:RMSpropOptimizer:lr, Value: 0.0007311487290046218
      optimizer:RMSpropOptimizer:momentum, Value: 0.21861024863893438
      optimizer:RMSpropOptimizer:weight_decay, Value: 0.04698906556966288
      optimizer:__choice__, Value: 'RMSpropOptimizer'
      scaler:Normalizer:norm, Value: 'max'
      scaler:__choice__, Value: 'Normalizer'
      trainer:StandardTrainer:weighted_loss, Value: False
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=27, ta_time_used=360.9801948070526, wallclock_time=239.13384795188904, budget=50.0)]
    {'accuracy': 0.8497109826589595}
    |    | Preprocessing                                                     | Estimator                                                    |   Weight |
    |---:|:------------------------------------------------------------------|:-------------------------------------------------------------|---------:|
    |  0 | None                                                              | CBLearner                                                    |     0.28 |
    |  1 | None                                                              | KNNLearner                                                   |     0.18 |
    |  2 | None                                                              | SVMLearner                                                   |     0.16 |
    |  3 | SimpleImputer,OneHotEncoder,StandardScaler,TruncSVD               | embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential    |     0.12 |
    |  4 | SimpleImputer,OneHotEncoder,Normalizer,PowerTransformer           | no embedding,MLPBackbone,FullyConnectedHead,nn.Sequential    |     0.08 |
    |  5 | SimpleImputer,OneHotEncoder,Normalizer,PowerTransformer           | no embedding,MLPBackbone,FullyConnectedHead,nn.Sequential    |     0.06 |
    |  6 | None                                                              | RFLearner                                                    |     0.04 |
    |  7 | SimpleImputer,OneHotEncoder,StandardScaler,TruncSVD               | embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential    |     0.02 |
    |  8 | SimpleImputer,OneHotEncoder,MinMaxScaler,KitchenSink              | no embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential |     0.02 |
    |  9 | None                                                              | ETLearner                                                    |     0.02 |
    | 10 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,MLPBackbone,FullyConnectedHead,nn.Sequential    |     0.02 |
    <smac.runhistory.runhistory.RunHistory object at 0x7f4810db0640> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.0013599395751953125, budget=0), TrajEntry(train_perf=0.16959064327485385, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=2.1232125759124756, wallclock_time=3.241581678390503, budget=5.555555555555555)]
    {'accuracy': 0.8554913294797688}
    |    | Preprocessing                                                 | Estimator                                                          |   Weight |
    |---:|:--------------------------------------------------------------|:-------------------------------------------------------------------|---------:|
    |  0 | SimpleImputer,NoEncoder,MinMaxScaler,Nystroem                 | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.54 |
    |  1 | SimpleImputer,NoEncoder,MinMaxScaler,KitchenSink              | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.08 |
    |  2 | None                                                          | CBLearner                                                          |     0.08 |
    |  3 | SimpleImputer,NoEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.08 |
    |  4 | SimpleImputer,NoEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.06 |
    |  5 | None                                                          | RFLearner                                                          |     0.04 |
    |  6 | SimpleImputer,NoEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.04 |
    |  7 | SimpleImputer,NoEncoder,MinMaxScaler,KitchenSink              | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.02 |
    |  8 | SimpleImputer,NoEncoder,NoScaler,TruncSVD                     | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.02 |
    |  9 | None                                                          | ETLearner                                                          |     0.02 |
    | 10 | None                                                          | SVMLearner                                                         |     0.02 |






|

.. code-block:: default

    import os
    import tempfile as tmp
    import warnings

    os.environ['JOBLIB_TEMP_FOLDER'] = tmp.gettempdir()
    os.environ['OMP_NUM_THREADS'] = '1'
    os.environ['OPENBLAS_NUM_THREADS'] = '1'
    os.environ['MKL_NUM_THREADS'] = '1'

    warnings.simplefilter(action='ignore', category=UserWarning)
    warnings.simplefilter(action='ignore', category=FutureWarning)

    import sklearn.datasets
    import sklearn.model_selection

    from autoPyTorch.api.tabular_classification import TabularClassificationTask
    from autoPyTorch.utils.hyperparameter_search_space_update import HyperparameterSearchSpaceUpdates


    def get_search_space_updates():
        """
        Search space updates to the task can be added using HyperparameterSearchSpaceUpdates
        Returns:
            HyperparameterSearchSpaceUpdates
        """
        updates = HyperparameterSearchSpaceUpdates()
        updates.append(node_name="data_loader",
                       hyperparameter="batch_size",
                       value_range=[16, 512],
                       default_value=32)
        updates.append(node_name="lr_scheduler",
                       hyperparameter="CosineAnnealingLR:T_max",
                       value_range=[50, 60],
                       default_value=55)
        updates.append(node_name='network_backbone',
                       hyperparameter='ResNetBackbone:dropout',
                       value_range=[0, 0.5],
                       default_value=0.2)
        return updates


    if __name__ == '__main__':

        ############################################################################
        # Data Loading
        # ============
        X, y = sklearn.datasets.fetch_openml(data_id=40981, return_X_y=True, as_frame=True)
        X_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(
            X,
            y,
            random_state=1,
        )

        ############################################################################
        # Build and fit a classifier with include components
        # ==================================================
        # AutoPyTorch can search for multiple configurations at the same time
        # if multiple cores are allocated, using the n_jobs argument. By default,
        # Only 1 core is used while searching for configurations.
        api = TabularClassificationTask(
            n_jobs=2,
            search_space_updates=get_search_space_updates(),
            include_components={'network_backbone': ['MLPBackbone', 'ResNetBackbone'],
                                'encoder': ['OneHotEncoder']}
        )

        ############################################################################
        # Search for an ensemble of machine learning algorithms
        # =====================================================
        api.search(
            X_train=X_train.copy(),
            y_train=y_train.copy(),
            X_test=X_test.copy(),
            y_test=y_test.copy(),
            optimize_metric='accuracy',
            total_walltime_limit=300,
            func_eval_time_limit_secs=50
        )

        ############################################################################
        # Print the final ensemble performance
        # ====================================
        print(api.run_history, api.trajectory)
        y_pred = api.predict(X_test)
        score = api.score(y_pred, y_test)
        print(score)
        print(api.show_models())

        ############################################################################
        # Build and fit a classifier with exclude components
        # ==================================================
        api = TabularClassificationTask(
            search_space_updates=get_search_space_updates(),
            exclude_components={'network_backbone': ['MLPBackbone'],
                                'encoder': ['OneHotEncoder']}
        )

        ############################################################################
        # Search for an ensemble of machine learning algorithms
        # =====================================================
        api.search(
            X_train=X_train,
            y_train=y_train,
            X_test=X_test.copy(),
            y_test=y_test.copy(),
            optimize_metric='accuracy',
            total_walltime_limit=300,
            func_eval_time_limit_secs=50
        )

        ############################################################################
        # Print the final ensemble performance
        # ====================================
        print(api.run_history, api.trajectory)
        y_pred = api.predict(X_test)
        score = api.score(y_pred, y_test)
        print(score)
        print(api.show_models())


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 11 minutes  6.501 seconds)


.. _sphx_glr_download_examples_40_advanced_example_custom_configuration_space.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/automl/Auto-PyTorch/development?urlpath=lab/tree/notebooks/examples/40_advanced/example_custom_configuration_space.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_custom_configuration_space.py <example_custom_configuration_space.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_custom_configuration_space.ipynb <example_custom_configuration_space.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
