
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/40_advanced/example_resampling_strategy.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_40_advanced_example_resampling_strategy.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_40_advanced_example_resampling_strategy.py:


======================
Tabular Classification with different resampling strategy
======================

The following example shows how to fit a sample classification model
with different resampling strategies in AutoPyTorch
By default, AutoPyTorch uses Holdout Validation with
a 67% train size split.

.. GENERATED FROM PYTHON SOURCE LINES 11-30

.. code-block:: default

    import os
    import tempfile as tmp
    import warnings

    os.environ['JOBLIB_TEMP_FOLDER'] = tmp.gettempdir()
    os.environ['OMP_NUM_THREADS'] = '1'
    os.environ['OPENBLAS_NUM_THREADS'] = '1'
    os.environ['MKL_NUM_THREADS'] = '1'

    warnings.simplefilter(action='ignore', category=UserWarning)
    warnings.simplefilter(action='ignore', category=FutureWarning)

    import sklearn.datasets
    import sklearn.model_selection

    from autoPyTorch.api.tabular_classification import TabularClassificationTask
    from autoPyTorch.datasets.resampling_strategy import CrossValTypes, HoldoutValTypes









.. GENERATED FROM PYTHON SOURCE LINES 31-33

Data Loading
============

.. GENERATED FROM PYTHON SOURCE LINES 33-40

.. code-block:: default

    X, y = sklearn.datasets.fetch_openml(data_id=40981, return_X_y=True, as_frame=True)
    X_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(
        X,
        y,
        random_state=1,
    )








.. GENERATED FROM PYTHON SOURCE LINES 41-43

Build and fit a classifier with default resampling strategy
===========================================================

.. GENERATED FROM PYTHON SOURCE LINES 43-52

.. code-block:: default

    api = TabularClassificationTask(
        # 'HoldoutValTypes.holdout_validation' with 'val_share': 0.33
        # is the default argument setting for TabularClassificationTask.
        # It is explicitly specified in this example for demonstrational
        # purpose.
        resampling_strategy=HoldoutValTypes.holdout_validation,
        resampling_strategy_args={'val_share': 0.33}
    )








.. GENERATED FROM PYTHON SOURCE LINES 53-55

Search for an ensemble of machine learning algorithms
=====================================================

.. GENERATED FROM PYTHON SOURCE LINES 55-65

.. code-block:: default

    api.search(
        X_train=X_train,
        y_train=y_train,
        X_test=X_test.copy(),
        y_test=y_test.copy(),
        optimize_metric='accuracy',
        total_walltime_limit=150,
        func_eval_time_limit_secs=30
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <autoPyTorch.api.tabular_classification.TabularClassificationTask object at 0x7fc7dfabae50>



.. GENERATED FROM PYTHON SOURCE LINES 66-68

Print the final ensemble performance
====================================

.. GENERATED FROM PYTHON SOURCE LINES 68-75

.. code-block:: default

    print(api.run_history, api.trajectory)
    y_pred = api.predict(X_test)
    score = api.score(y_pred, y_test)
    print(score)
    # Print the final ensemble built by AutoPyTorch
    print(api.show_models())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <smac.runhistory.runhistory.RunHistory object at 0x7fc7dfaba490> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.0011425018310546875, budget=0), TrajEntry(train_perf=0.18128654970760238, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=1.8062164783477783, wallclock_time=2.838493585586548, budget=5.555555555555555), TrajEntry(train_perf=0.2222222222222222, incumbent_id=2, incumbent=Configuration:
      data_loader:batch_size, Value: 191
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:RandomKitchenSinks:gamma, Value: 0.0028731655918751197
      feature_preprocessor:RandomKitchenSinks:n_components, Value: 4
      feature_preprocessor:__choice__, Value: 'RandomKitchenSinks'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'most_frequent'
      lr_scheduler:CosineAnnealingLR:T_max, Value: 14
      lr_scheduler:__choice__, Value: 'CosineAnnealingLR'
      network_backbone:ResNetBackbone:activation, Value: 'tanh'
      network_backbone:ResNetBackbone:blocks_per_group_0, Value: 1
      network_backbone:ResNetBackbone:blocks_per_group_1, Value: 2
      network_backbone:ResNetBackbone:blocks_per_group_2, Value: 1
      network_backbone:ResNetBackbone:blocks_per_group_3, Value: 4
      network_backbone:ResNetBackbone:blocks_per_group_4, Value: 1
      network_backbone:ResNetBackbone:blocks_per_group_5, Value: 1
      network_backbone:ResNetBackbone:blocks_per_group_6, Value: 3
      network_backbone:ResNetBackbone:blocks_per_group_7, Value: 4
      network_backbone:ResNetBackbone:blocks_per_group_8, Value: 1
      network_backbone:ResNetBackbone:blocks_per_group_9, Value: 1
      network_backbone:ResNetBackbone:max_shake_drop_probability, Value: 0.028959123778947493
      network_backbone:ResNetBackbone:num_groups, Value: 9
      network_backbone:ResNetBackbone:num_units_0, Value: 155
      network_backbone:ResNetBackbone:num_units_1, Value: 243
      network_backbone:ResNetBackbone:num_units_2, Value: 634
      network_backbone:ResNetBackbone:num_units_3, Value: 640
      network_backbone:ResNetBackbone:num_units_4, Value: 567
      network_backbone:ResNetBackbone:num_units_5, Value: 60
      network_backbone:ResNetBackbone:num_units_6, Value: 83
      network_backbone:ResNetBackbone:num_units_7, Value: 553
      network_backbone:ResNetBackbone:num_units_8, Value: 409
      network_backbone:ResNetBackbone:num_units_9, Value: 791
      network_backbone:ResNetBackbone:use_dropout, Value: False
      network_backbone:ResNetBackbone:use_shake_drop, Value: True
      network_backbone:ResNetBackbone:use_shake_shake, Value: False
      network_backbone:__choice__, Value: 'ResNetBackbone'
      network_embedding:LearnedEntityEmbedding:dimension_reduction_0, Value: 0.718287545005021
      network_embedding:LearnedEntityEmbedding:dimension_reduction_1, Value: 0.8807826377589656
      network_embedding:LearnedEntityEmbedding:dimension_reduction_2, Value: 0.6998335637072234
      network_embedding:LearnedEntityEmbedding:dimension_reduction_3, Value: 0.007299455846498049
      network_embedding:LearnedEntityEmbedding:dimension_reduction_4, Value: 0.7759095461320867
      network_embedding:LearnedEntityEmbedding:dimension_reduction_5, Value: 0.29827527225127526
      network_embedding:LearnedEntityEmbedding:dimension_reduction_6, Value: 0.1497940855127735
      network_embedding:LearnedEntityEmbedding:dimension_reduction_7, Value: 0.644379887286444
      network_embedding:LearnedEntityEmbedding:min_unique_values_for_embedding, Value: 3
      network_embedding:__choice__, Value: 'LearnedEntityEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 310
      network_init:OrthogonalInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'OrthogonalInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9117663354722707
      optimizer:AdamOptimizer:beta2, Value: 0.9594530236003279
      optimizer:AdamOptimizer:lr, Value: 0.0006173929099299278
      optimizer:AdamOptimizer:weight_decay, Value: 0.054743681071133435
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'NoScaler'
      trainer:MixUpTrainer:alpha, Value: 0.2872788937756616
      trainer:MixUpTrainer:weighted_loss, Value: False
      trainer:__choice__, Value: 'MixUpTrainer'
    , ta_runs=13, ta_time_used=65.0901837348938, wallclock_time=102.39400458335876, budget=50.0)]
    {'accuracy': 0.8554913294797688}
    |    | Preprocessing                                                     | Estimator                                                       |   Weight |
    |---:|:------------------------------------------------------------------|:----------------------------------------------------------------|---------:|
    |  0 | SimpleImputer,OneHotEncoder,NoScaler,KitchenSink                  | embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential       |     0.28 |
    |  1 | None                                                              | SVC                                                             |     0.18 |
    |  2 | None                                                              | KNNClassifier                                                   |     0.18 |
    |  3 | SimpleImputer,OneHotEncoder,NoScaler,KitchenSink                  | embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential       |     0.12 |
    |  4 | SimpleImputer,OneHotEncoder,Normalizer,PolynomialFeatures         | embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.04 |
    |  5 | None                                                              | CatBoostClassifier                                              |     0.04 |
    |  6 | None                                                              | RFClassifier                                                    |     0.04 |
    |  7 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential |     0.04 |
    |  8 | SimpleImputer,OneHotEncoder,Normalizer,PolynomialFeatures         | embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.02 |
    |  9 | SimpleImputer,OneHotEncoder,NoScaler,KitchenSink                  | embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential       |     0.02 |
    | 10 | None                                                              | ExtraTreesClassifier                                            |     0.02 |
    | 11 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential |     0.02 |




.. GENERATED FROM PYTHON SOURCE LINES 78-80

Build and fit a classifier with Cross validation resampling strategy
====================================================================

.. GENERATED FROM PYTHON SOURCE LINES 80-85

.. code-block:: default

    api = TabularClassificationTask(
        resampling_strategy=CrossValTypes.k_fold_cross_validation,
        resampling_strategy_args={'num_splits': 3}
    )








.. GENERATED FROM PYTHON SOURCE LINES 86-88

Search for an ensemble of machine learning algorithms
=====================================================

.. GENERATED FROM PYTHON SOURCE LINES 88-98

.. code-block:: default

    api.search(
        X_train=X_train,
        y_train=y_train,
        X_test=X_test.copy(),
        y_test=y_test.copy(),
        optimize_metric='accuracy',
        total_walltime_limit=150,
        func_eval_time_limit_secs=30
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <autoPyTorch.api.tabular_classification.TabularClassificationTask object at 0x7fc7df929af0>



.. GENERATED FROM PYTHON SOURCE LINES 99-101

Print the final ensemble performance
====================================

.. GENERATED FROM PYTHON SOURCE LINES 101-108

.. code-block:: default

    print(api.run_history, api.trajectory)
    y_pred = api.predict(X_test)
    score = api.score(y_pred, y_test)
    print(score)
    # Print the final ensemble built by AutoPyTorch
    print(api.show_models())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <smac.runhistory.runhistory.RunHistory object at 0x7fc7dfd31190> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.0011839866638183594, budget=0), TrajEntry(train_perf=0.15480222378634426, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=5.202185869216919, wallclock_time=6.242708921432495, budget=5.555555555555555)]
    {'accuracy': 0.861271676300578}
    |    | Preprocessing                                                     | Estimator                                                          |   Weight |
    |---:|:------------------------------------------------------------------|:-------------------------------------------------------------------|---------:|
    |  0 | None                                                              | TabularClassifier                                                  |     0.68 |
    |  1 | SimpleImputer,OneHotEncoder,MinMaxScaler,Nystroem                 | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.22 |
    |  2 | None                                                              | TabularClassifier                                                  |     0.04 |
    |  3 | None                                                              | TabularClassifier                                                  |     0.04 |
    |  4 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.02 |




.. GENERATED FROM PYTHON SOURCE LINES 111-113

Build and fit a classifier with Stratified resampling strategy
==============================================================

.. GENERATED FROM PYTHON SOURCE LINES 113-121

.. code-block:: default

    api = TabularClassificationTask(
        # For demonstration purposes, we use
        # Stratified hold out validation. However,
        # one can also use CrossValTypes.stratified_k_fold_cross_validation.
        resampling_strategy=HoldoutValTypes.stratified_holdout_validation,
        resampling_strategy_args={'val_share': 0.33}
    )








.. GENERATED FROM PYTHON SOURCE LINES 122-124

Search for an ensemble of machine learning algorithms
=====================================================

.. GENERATED FROM PYTHON SOURCE LINES 124-134

.. code-block:: default

    api.search(
        X_train=X_train,
        y_train=y_train,
        X_test=X_test.copy(),
        y_test=y_test.copy(),
        optimize_metric='accuracy',
        total_walltime_limit=150,
        func_eval_time_limit_secs=30
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <autoPyTorch.api.tabular_classification.TabularClassificationTask object at 0x7fc73f98b310>



.. GENERATED FROM PYTHON SOURCE LINES 135-137

Print the final ensemble performance
====================================

.. GENERATED FROM PYTHON SOURCE LINES 137-143

.. code-block:: default

    print(api.run_history, api.trajectory)
    y_pred = api.predict(X_test)
    score = api.score(y_pred, y_test)
    print(score)
    # Print the final ensemble built by AutoPyTorch
    print(api.show_models())




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <smac.runhistory.runhistory.RunHistory object at 0x7fc73f274070> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.0011150836944580078, budget=0), TrajEntry(train_perf=0.17543859649122806, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=1.862703561782837, wallclock_time=2.899428129196167, budget=5.555555555555555)]
    {'accuracy': 0.8497109826589595}
    |    | Preprocessing                                                     | Estimator                                                       |   Weight |
    |---:|:------------------------------------------------------------------|:----------------------------------------------------------------|---------:|
    |  0 | None                                                              | CatBoostClassifier                                              |     0.24 |
    |  1 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential |     0.18 |
    |  2 | None                                                              | SVC                                                             |     0.14 |
    |  3 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential |     0.12 |
    |  4 | None                                                              | RFClassifier                                                    |     0.1  |
    |  5 | None                                                              | KNNClassifier                                                   |     0.08 |
    |  6 | None                                                              | ExtraTreesClassifier                                            |     0.06 |
    |  7 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential |     0.06 |
    |  8 | None                                                              | LGBMClassifier                                                  |     0.02 |





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 9 minutes  12.150 seconds)


.. _sphx_glr_download_examples_40_advanced_example_resampling_strategy.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/automl/Auto-PyTorch/refactor_development?urlpath=lab/tree/notebooks/examples/40_advanced/example_resampling_strategy.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_resampling_strategy.py <example_resampling_strategy.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_resampling_strategy.ipynb <example_resampling_strategy.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
