
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/40_advanced/example_resampling_strategy.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_40_advanced_example_resampling_strategy.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_40_advanced_example_resampling_strategy.py:


======================
Tabular Classification with different resampling strategy
======================

The following example shows how to fit a sample classification model
with different resampling strategies in AutoPyTorch
By default, AutoPyTorch uses Holdout Validation with
a 67% train size split.

.. GENERATED FROM PYTHON SOURCE LINES 11-30

.. code-block:: default

    import os
    import tempfile as tmp
    import warnings

    os.environ['JOBLIB_TEMP_FOLDER'] = tmp.gettempdir()
    os.environ['OMP_NUM_THREADS'] = '1'
    os.environ['OPENBLAS_NUM_THREADS'] = '1'
    os.environ['MKL_NUM_THREADS'] = '1'

    warnings.simplefilter(action='ignore', category=UserWarning)
    warnings.simplefilter(action='ignore', category=FutureWarning)

    import sklearn.datasets
    import sklearn.model_selection

    from autoPyTorch.api.tabular_classification import TabularClassificationTask
    from autoPyTorch.datasets.resampling_strategy import CrossValTypes, HoldoutValTypes









.. GENERATED FROM PYTHON SOURCE LINES 31-33

Data Loading
============

.. GENERATED FROM PYTHON SOURCE LINES 33-40

.. code-block:: default

    X, y = sklearn.datasets.fetch_openml(data_id=40981, return_X_y=True, as_frame=True)
    X_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(
        X,
        y,
        random_state=1,
    )








.. GENERATED FROM PYTHON SOURCE LINES 41-43

Build and fit a classifier with default resampling strategy
===========================================================

.. GENERATED FROM PYTHON SOURCE LINES 43-52

.. code-block:: default

    api = TabularClassificationTask(
        # 'HoldoutValTypes.holdout_validation' with 'val_share': 0.33
        # is the default argument setting for TabularClassificationTask.
        # It is explicitly specified in this example for demonstrational
        # purpose.
        resampling_strategy=HoldoutValTypes.holdout_validation,
        resampling_strategy_args={'val_share': 0.33}
    )








.. GENERATED FROM PYTHON SOURCE LINES 53-55

Search for an ensemble of machine learning algorithms
=====================================================

.. GENERATED FROM PYTHON SOURCE LINES 55-65

.. code-block:: default

    api.search(
        X_train=X_train,
        y_train=y_train,
        X_test=X_test.copy(),
        y_test=y_test.copy(),
        optimize_metric='accuracy',
        total_walltime_limit=150,
        func_eval_time_limit_secs=30
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <autoPyTorch.api.tabular_classification.TabularClassificationTask object at 0x7fbfe7c66fa0>



.. GENERATED FROM PYTHON SOURCE LINES 66-68

Print the final ensemble performance
====================================

.. GENERATED FROM PYTHON SOURCE LINES 68-75

.. code-block:: default

    print(api.run_history, api.trajectory)
    y_pred = api.predict(X_test)
    score = api.score(y_pred, y_test)
    print(score)
    # Print the final ensemble built by AutoPyTorch
    print(api.show_models())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <smac.runhistory.runhistory.RunHistory object at 0x7fc080ee1430> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.002045154571533203, budget=0), TrajEntry(train_perf=0.17543859649122806, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=5.522613525390625, wallclock_time=6.568607568740845, budget=5.555555555555555), TrajEntry(train_perf=0.16374269005847952, incumbent_id=2, incumbent=Configuration:
      data_loader:batch_size, Value: 186
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:RandomKitchenSinks:gamma, Value: 1.644868962621659
      feature_preprocessor:RandomKitchenSinks:n_components, Value: 5
      feature_preprocessor:__choice__, Value: 'RandomKitchenSinks'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:CosineAnnealingLR:T_max, Value: 380
      lr_scheduler:__choice__, Value: 'CosineAnnealingLR'
      network_backbone:MLPBackbone:activation, Value: 'relu'
      network_backbone:MLPBackbone:num_groups, Value: 9
      network_backbone:MLPBackbone:num_units_1, Value: 635
      network_backbone:MLPBackbone:num_units_2, Value: 879
      network_backbone:MLPBackbone:num_units_3, Value: 328
      network_backbone:MLPBackbone:num_units_4, Value: 679
      network_backbone:MLPBackbone:num_units_5, Value: 549
      network_backbone:MLPBackbone:num_units_6, Value: 788
      network_backbone:MLPBackbone:num_units_7, Value: 770
      network_backbone:MLPBackbone:num_units_8, Value: 998
      network_backbone:MLPBackbone:num_units_9, Value: 862
      network_backbone:MLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'MLPBackbone'
      network_embedding:LearnedEntityEmbedding:dimension_reduction_0, Value: 0.5448200037142373
      network_embedding:LearnedEntityEmbedding:dimension_reduction_1, Value: 0.305468215620068
      network_embedding:LearnedEntityEmbedding:dimension_reduction_2, Value: 0.22189286358576743
      network_embedding:LearnedEntityEmbedding:dimension_reduction_3, Value: 0.2151860239430663
      network_embedding:LearnedEntityEmbedding:dimension_reduction_4, Value: 0.7938183713522728
      network_embedding:LearnedEntityEmbedding:dimension_reduction_5, Value: 0.6299603651127959
      network_embedding:LearnedEntityEmbedding:dimension_reduction_6, Value: 0.4730957659098908
      network_embedding:LearnedEntityEmbedding:dimension_reduction_7, Value: 0.2253822064768397
      network_embedding:LearnedEntityEmbedding:min_unique_values_for_embedding, Value: 4
      network_embedding:__choice__, Value: 'LearnedEntityEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 445
      network_init:KaimingInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'KaimingInit'
      optimizer:RMSpropOptimizer:alpha, Value: 0.7192280465474692
      optimizer:RMSpropOptimizer:lr, Value: 0.0014702771303362699
      optimizer:RMSpropOptimizer:momentum, Value: 0.14658197437918166
      optimizer:RMSpropOptimizer:weight_decay, Value: 0.027578076951023545
      optimizer:__choice__, Value: 'RMSpropOptimizer'
      scaler:Normalizer:norm, Value: 'mean_squared'
      scaler:__choice__, Value: 'Normalizer'
      trainer:MixUpTrainer:alpha, Value: 0.006896449260117565
      trainer:MixUpTrainer:weighted_loss, Value: False
      trainer:__choice__, Value: 'MixUpTrainer'
    , ta_runs=8, ta_time_used=80.06308937072754, wallclock_time=113.943523645401, budget=5.555555555555555)]
    {'accuracy': 0.8554913294797688}
    |    | Preprocessing                                                 | Estimator                                                       |   Weight |
    |---:|:--------------------------------------------------------------|:----------------------------------------------------------------|---------:|
    |  0 | None                                                          | CBLearner                                                       |     0.62 |
    |  1 | SimpleImputer,OneHotEncoder,StandardScaler,PolynomialFeatures | embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.24 |
    |  2 | None                                                          | SVMLearner                                                      |     0.06 |
    |  3 | SimpleImputer,OneHotEncoder,Normalizer,KitchenSink            | embedding,MLPBackbone,FullyConnectedHead,nn.Sequential          |     0.02 |
    |  4 | None                                                          | LGBMLearner                                                     |     0.02 |
    |  5 | None                                                          | ETLearner                                                       |     0.02 |
    |  6 | None                                                          | KNNLearner                                                      |     0.02 |




.. GENERATED FROM PYTHON SOURCE LINES 78-80

Build and fit a classifier with Cross validation resampling strategy
====================================================================

.. GENERATED FROM PYTHON SOURCE LINES 80-85

.. code-block:: default

    api = TabularClassificationTask(
        resampling_strategy=CrossValTypes.k_fold_cross_validation,
        resampling_strategy_args={'num_splits': 3}
    )








.. GENERATED FROM PYTHON SOURCE LINES 86-88

Search for an ensemble of machine learning algorithms
=====================================================

.. GENERATED FROM PYTHON SOURCE LINES 88-98

.. code-block:: default

    api.search(
        X_train=X_train,
        y_train=y_train,
        X_test=X_test.copy(),
        y_test=y_test.copy(),
        optimize_metric='accuracy',
        total_walltime_limit=150,
        func_eval_time_limit_secs=30
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <autoPyTorch.api.tabular_classification.TabularClassificationTask object at 0x7fbfe8cb57c0>



.. GENERATED FROM PYTHON SOURCE LINES 99-101

Print the final ensemble performance
====================================

.. GENERATED FROM PYTHON SOURCE LINES 101-108

.. code-block:: default

    print(api.run_history, api.trajectory)
    y_pred = api.predict(X_test)
    score = api.score(y_pred, y_test)
    print(score)
    # Print the final ensemble built by AutoPyTorch
    print(api.show_models())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <smac.runhistory.runhistory.RunHistory object at 0x7fbfe8ba1730> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.0018086433410644531, budget=0), TrajEntry(train_perf=0.16440069756261305, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=16.148986339569092, wallclock_time=17.20011878013611, budget=5.555555555555555)]
    {'accuracy': 0.884393063583815}
    |    | Preprocessing   | Estimator               |   Weight |
    |---:|:----------------|:------------------------|---------:|
    |  0 | None            | TabularTraditionalModel |     0.98 |
    |  1 | None            | TabularTraditionalModel |     0.02 |




.. GENERATED FROM PYTHON SOURCE LINES 111-113

Build and fit a classifier with Stratified resampling strategy
==============================================================

.. GENERATED FROM PYTHON SOURCE LINES 113-121

.. code-block:: default

    api = TabularClassificationTask(
        # For demonstration purposes, we use
        # Stratified hold out validation. However,
        # one can also use CrossValTypes.stratified_k_fold_cross_validation.
        resampling_strategy=HoldoutValTypes.stratified_holdout_validation,
        resampling_strategy_args={'val_share': 0.33}
    )








.. GENERATED FROM PYTHON SOURCE LINES 122-124

Search for an ensemble of machine learning algorithms
=====================================================

.. GENERATED FROM PYTHON SOURCE LINES 124-134

.. code-block:: default

    api.search(
        X_train=X_train,
        y_train=y_train,
        X_test=X_test.copy(),
        y_test=y_test.copy(),
        optimize_metric='accuracy',
        total_walltime_limit=150,
        func_eval_time_limit_secs=30
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <autoPyTorch.api.tabular_classification.TabularClassificationTask object at 0x7fbfe8ba1820>



.. GENERATED FROM PYTHON SOURCE LINES 135-137

Print the final ensemble performance
====================================

.. GENERATED FROM PYTHON SOURCE LINES 137-143

.. code-block:: default

    print(api.run_history, api.trajectory)
    y_pred = api.predict(X_test)
    score = api.score(y_pred, y_test)
    print(score)
    # Print the final ensemble built by AutoPyTorch
    print(api.show_models())




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <smac.runhistory.runhistory.RunHistory object at 0x7fbfe8b69c70> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.0018160343170166016, budget=0), TrajEntry(train_perf=0.16374269005847952, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=5.998781442642212, wallclock_time=7.0528247356414795, budget=5.555555555555555)]
    {'accuracy': 0.8554913294797688}
    |    | Preprocessing                                                 | Estimator                                                       |   Weight |
    |---:|:--------------------------------------------------------------|:----------------------------------------------------------------|---------:|
    |  0 | SimpleImputer,OneHotEncoder,StandardScaler,PolynomialFeatures | embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.26 |
    |  1 | None                                                          | LGBMLearner                                                     |     0.2  |
    |  2 | None                                                          | CBLearner                                                       |     0.18 |
    |  3 | None                                                          | RFLearner                                                       |     0.12 |
    |  4 | SimpleImputer,OneHotEncoder,Normalizer,PolynomialFeatures     | no embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential    |     0.08 |
    |  5 | None                                                          | SVMLearner                                                      |     0.08 |
    |  6 | SimpleImputer,OneHotEncoder,Normalizer,KitchenSink            | embedding,MLPBackbone,FullyConnectedHead,nn.Sequential          |     0.04 |
    |  7 | None                                                          | ETLearner                                                       |     0.04 |





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 9 minutes  31.933 seconds)


.. _sphx_glr_download_examples_40_advanced_example_resampling_strategy.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/automl/Auto-PyTorch/development?urlpath=lab/tree/notebooks/examples/40_advanced/example_resampling_strategy.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_resampling_strategy.py <example_resampling_strategy.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_resampling_strategy.ipynb <example_resampling_strategy.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
